# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if not head or k==0:
            return head

        length = 1
        temp = head
        while temp.next:
            length+=1
            temp = temp.next

        k %= length
        if k==0:
            return head

        new_tail = head
        for i in range(length-k-1):
            new_tail = new_tail.next

        new_head = new_tail.next

        new_tail.next = None
        temp.next = head

        return new_head
