# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:
        if not head or not head.next:
            return True

        slow, fast = head, head
        while fast and fast.next:
            fast = fast.next.next
            slow = slow.next

        prev = None

        while slow:
            nextNode = slow.next
            slow.next = prev
            prev = slow
            slow = nextNode

        firstHalf, secondHalf = head, prev
        while secondHalf:
            if firstHalf.val != secondHalf.val:
                return False

            firstHalf = firstHalf.next
            secondHalf = secondHalf.next

        return True
