#分别写两个函数来寻找第一个和最后一个目标元素


class Solution:

    def searchRange(self, nums: List[int], target: int) -> List[int]:
        if nums == None or len(nums) == 0:
            return [-1, -1]

        firstTargetIndex = self.searchFirstTargetIndex(nums, target)
        if firstTargetIndex == -1:
            return [-1, -1]
        lastTargetIndex = self.searchLastTargetIndex(nums, target)

        return [firstTargetIndex, lastTargetIndex]


    def searchFirstTargetIndex(self, nums, target):
        left, right = 0, len(nums) - 1
        while left <= right:
            mid = left + (right - left) // 2
            if target == nums[mid]:
                if mid == 0 or nums[mid - 1] != target:
                    return mid
                else:
                    right = mid - 1
            elif target > nums[mid]:
                left = mid + 1
            else:
                right = mid - 1

        return -1

    def searchLastTargetIndex(self, nums, target):
        left, right = 0, len(nums) - 1
        while left <= right:
            mid = left + (right - left) // 2
            if target == nums[mid]:
                if mid == len(nums) - 1 or nums[mid + 1] != target:
                    return mid
                else:
                    left = mid + 1
            elif target > nums[mid]:
                left = mid + 1
            else:
                right = mid - 1

        return -1

