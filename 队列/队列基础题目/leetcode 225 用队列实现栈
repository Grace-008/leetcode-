'''
视频讲解

https://www.bilibili.com/video/BV1Fd4y1K7sm/?spm_id_from=pageDriver&vd_source=cde64dea53008919ff0ec17ff3464cf4
'''

'''
用两个队列实现
'''
class MyStack:

    def __init__(self):
        self.queueIn= deque()
        self.queueOut = deque()


    def push(self, x: int) -> None:
        self.queueIn.append(x)


    def pop(self) -> int:
        if self.empty():
            return None
        for i in range(len(self.queueIn)-1):
            self.queueOut.append(self.queueIn.pop())
        self.queueIn,self.queueOut = self.queueOut,self.queueIn
        return self.queueOut.popleft()

    def top(self) -> int:
        if self.empty():
            return None
        return self.queueIn[-1]

    def empty(self) -> bool:
        return len(self.queueIn)==0



# Your MyStack object will be instantiated and called as such:
# obj = MyStack()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.top()
# param_4 = obj.empty()


'''
用一个队列实现
'''
class MyStack:

    def __init__(self):
        self.queue = deque()


    def push(self, x: int) -> None:
        self.queue.append(x)


    def pop(self) -> int:
        if self.empty():
            return None
        for i in range(len(self.queue)-1):
            self.queue.append(self.queue.popleft())
        return self.queue.popleft()


    def top(self) -> int:
        if self.empty():
            return None
        return self.queue[-1]


    def empty(self) -> bool:
        return not self.queue



# Your MyStack object will be instantiated and called as such:
# obj = MyStack()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.top()
# param_4 = obj.empty()
