⭕️没有括号的情况

class Solution:
    def calculate(self, s: str) -> int:
        #存储符号
        preSign=1
        #存储数字
        num=0
        #存储结果
        res=0
        for char in s:
            if char.isdigit():
                num = num * 10 + ord(char) - ord('0')
            elif char=='+':
                res += (preSign * num)
                preSign = 1
                num = 0
            elif char=='-':
                res += (preSign * num)
                preSign = -1
                num = 0
        return res+preSign*num
        
        
⭕️有括号的情况
class Solution:
    def calculate(self, s: str) -> int:
        stack = []
        num = 0
        res = 0
        sign = 1
        for char in s:
            if char.isdigit():
                num = num * 10 + ord(char) - ord('0')
                #当遇到加号或者减号的时候，先把前面的值放到res中
            elif char == '+':
                res += num * sign  # Add the product to the result
                num = 0
                sign = 1
            elif char == '-':
                res += num * sign  # Add the product to the result
                num = 0
                sign = -1
            elif char == '(':
            #左括号前面有值，和符号
                stack.append(res)
                stack.append(sign)
                sign = 1
                res = 0
            elif char == ')':
                res += num * sign
                res *= stack.pop()
                res += stack.pop()
                sign = 1

        if num != 0:
            res += sign * num
        return res
