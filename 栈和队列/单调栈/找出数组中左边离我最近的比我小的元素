def find_left_small(nums):
    #从右往左遍历
    #初始化一个结果数组
    #对于升序的数组压栈，此时栈被称为单调栈，碰到一个比栈顶的元素要小的值，就去更新栈顶元素对应的数组的索引更新；
    ans = [0] * len(nums)
    stack = deque()
    for i in range(len(nums)-1,-1,-1):
        curr_value = nums[i]
        #单调递减栈
        while stack and curr_value < nums[stack[-1]]:
            ans[stack[-1]] = i
            stack.pop()
        #栈里面存储的是索引
        stack.append(i)
    #栈里剩下的索引，右边没有比它小的值
    while stack:
        ans[stack[-1]] = -1
        stack.pop()
    return ans
