单调栈是一种数据结构，它可以用于解决一类经典的问题，即在一个序列中，找到每个元素左边或右边最近且比它大或小的元素。

单调栈的特点是栈内元素单调递增或单调递减，它可以帮助我们在O(n)的时间复杂度内解决上述问题。

在使用单调栈解决问题时，我们通常使用一个单调递增栈或单调递减栈，具体取决于问题的要求。如果需要找到每个元素左边或右边最近且比它小的元素，则使用单调递增栈，反之使用单调递减栈。

单调栈的基本操作是 push 和 pop，当向栈中压入一个元素时，如果该元素不满足单调性质，则需要弹出栈顶元素，直到栈顶元素满足单调性质为止，然后将该元素压入栈中。如果需要访问栈中的元素，则直接访问栈顶元素即可。

单调栈常用于解决一些经典问题，比如求解柱状图中最大的矩形面积、求解每个元素左边或右边最近且比它大或小的元素等。

▶️

找出数组中右边第一个比我小的元素

0 1 2 3 4 5 6
1 2 3 9 5 0 6
5 5 5 4 5 -1 -1
