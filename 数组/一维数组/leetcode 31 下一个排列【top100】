从右向左遍历数组，找到第一个不满足递增顺序的元素，记为索引 i。如果整个数组都是递增顺序的，则说明该数组已经是字典序最大的排列，需要将其反转为升序排列作为下一个排列。

如果找到了索引 i，再次从右向左遍历数组，找到第一个大于 nums[i] 的元素，记为索引 j。

交换索引 i 和索引 j 处的元素。

将索引 i 之后的所有元素进行反转，使其变为升序。

class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        # Find the index of the first element from the right that is smaller than its next element
        i = len(nums) - 2
        while i >= 0 and nums[i] >= nums[i+1]:
            i -= 1
        
        if i >= 0:
            # Find the index of the smallest element from the right that is greater than nums[i]
            j = len(nums) - 1
            while j >= 0 and nums[j] <= nums[i]:
                j -= 1
            
            # Swap nums[i] and nums[j]
            nums[i], nums[j] = nums[j], nums[i]
        
        # Reverse the order of the elements after i
        self.reverse(nums, i+1)

    def reverse(self, nums, start):
        end = len(nums) - 1
        while start < end:
            nums[start], nums[end] = nums[end], nums[start]
            start += 1
            end -= 1
