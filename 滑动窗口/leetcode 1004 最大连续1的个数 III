⭕️记录窗口中0的个数
class Solution:
    def longestOnes(self, nums: List[int], k: int) -> int:
        n = len(nums)
        left,right=0,0
        windowZeroCnt = 0
        ans=0

        firstZeroIndex=-1
        while right<len(nums):
            if nums[right]==0:
                windowZeroCnt+=1
                if windowZeroCnt==k+1:
                    ans = max(ans,right-left)
                
            while windowZeroCnt==k+1:
                if nums[left]==0:
                    windowZeroCnt-=1
                left+=1
            right+=1
        return max(ans,right-left)
        
⭕️记录窗口中1的个数    
  
class Solution:
    def longestOnes(self, nums: List[int], k: int) -> int:
        ans = 0
        left,right=0,0
        oneCnt = 0
        while right<len(nums):
            if nums[right]==1:
                oneCnt+=1
            while right-left+1-oneCnt>k:
                if nums[left]==1:
                    oneCnt-=1
                left+=1
            ans = max(ans,right-left+1)
            right+=1
        return ans
