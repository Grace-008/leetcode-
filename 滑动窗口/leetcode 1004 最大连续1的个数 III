⭕️记录窗口中0的个数
class Solution:
    def longestOnes(self, nums: List[int], k: int) -> int:
        n = len(nums)
        left,right=0,0
        windowZeroCnt = 0
        ans=0

        firstZeroIndex=-1
        while right<len(nums):
            if nums[right]==0:
                windowZeroCnt+=1
                if windowZeroCnt==k+1:
                    ans = max(ans,right-left)
                
            while windowZeroCnt==k+1:
                if nums[left]==0:
                    windowZeroCnt-=1
                left+=1
            right+=1
        return max(ans,right-left)
        
⭕️记录窗口中1的个数    
  
def longestOnes(nums, k):
    left = 0
    max_length = 0
    zeros_count = 0  # to keep track of the number of zeros in the current window

    for right in range(len(nums)):
        if nums[right] == 0:
            zeros_count += 1

        while zeros_count > k:  # shrink window from the left
            if nums[left] == 0:
                zeros_count -= 1
            left += 1

        # update the maximum length
        max_length = max(max_length, right - left + 1)

    return max_length

