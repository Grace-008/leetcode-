⭕️滑动窗口

class Solution:
    def findMaxConsecutiveOnes(self, nums: List[int]) -> int:
        #右边边界一直走，知道找到第二个0，此时左边边界一直走，走到第一个0后面
        ans=0
        left,right=0,0
        windowZeroCnt=0
        while right<len(nums):
            if nums[right]==0:
                windowZeroCnt+=1
                if windowZeroCnt==2:
                    ans = max(ans,right-left)

            while windowZeroCnt==2:
                if nums[left]==0:
                    windowZeroCnt-=1
                left+=1
            
            right+=1

            
        return max(ans,right-left)
 
 ⭕️优化
def findMaxConsecutiveOnes(nums):
    left, right = 0, 0
    flippedIndex = -1
    maxLength = 0

    for right in range(len(nums)):
        if nums[right] == 0:
            if flippedIndex >= 0:  # There is already a flipped 0 in the window
                left = flippedIndex + 1
            flippedIndex = right

        # The window [left, right] contains at most one zero
        maxLength = max(maxLength, right - left + 1)

    return maxLength

