1.二叉堆

二叉堆是一种基于完全二叉树的数据结构，它可以用来实现优先队列。二叉堆分为两种类型：最大堆和最小堆。最大堆是一种堆，其中每个节点的值都大于或等于其子节点的值，而最小堆则是一种堆，其中每个节点的值都小于或等于其子节点的值。

在二叉堆中，根节点始终是堆中最大或最小的元素。如果使用最大堆，那么根节点就是最大的元素；如果使用最小堆，那么根节点就是最小的元素。堆的重要性质是，除了根节点之外，每个节点的值都小于或等于（最大堆）或大于或等于（最小堆）其父节点的值。这个属性被称为堆属性或堆序。

二叉堆通常使用数组来实现，其中根节点位于数组的第一个位置，而每个节点的子节点位于数组的固定位置。这种布局使得查找和访问任何节点的父节点或子节点都非常容易，只需使用简单的索引计算即可。二叉堆还可以支持插入、删除节点和堆化等操作，这些操作的时间复杂度是 O(log n)。

2.大顶堆

大顶堆是一种基于完全二叉树的数据结构，它是一种二叉堆的特殊形式。在大顶堆中，每个节点的值都大于或等于其左右子节点的值。因此，大顶堆的根节点是堆中的最大元素。

大顶堆通常使用数组来实现，其中根节点位于数组的第一个位置，而每个节点的子节点位于数组的固定位置。这种布局使得查找和访问任何节点的父节点或子节点都非常容易，只需使用简单的索引计算即可。

大顶堆支持以下几种操作：

插入元素：将元素添加到堆的末尾，然后执行堆化操作，使堆保持其大顶堆的性质。
删除元素：删除堆顶元素，将堆末尾元素移到堆顶，然后执行堆化操作，使堆保持其大顶堆的性质。
堆化：将一个无序数组转化为大顶堆，或者在插入或删除元素后，将堆恢复为大顶堆。
大顶堆的时间复杂度为 O(log n)，它在优先队列、排序和图算法等领域中得到广泛应用。

3.小顶堆

小顶堆是一种基于完全二叉树的数据结构，它是一种二叉堆的特殊形式。在小顶堆中，每个节点的值都小于或等于其左右子节点的值。因此，小顶堆的根节点是堆中的最小元素。

小顶堆通常使用数组来实现，其中根节点位于数组的第一个位置，而每个节点的子节点位于数组的固定位置。这种布局使得查找和访问任何节点的父节点或子节点都非常容易，只需使用简单的索引计算即可。

小顶堆支持以下几种操作：

插入元素：将元素添加到堆的末尾，然后执行堆化操作，使堆保持其小顶堆的性质。
删除元素：删除堆顶元素，将堆末尾元素移到堆顶，然后执行堆化操作，使堆保持其小顶堆的性质。
堆化：将一个无序数组转化为小顶堆，或者在插入或删除元素后，将堆恢复为小顶堆。
小顶堆的时间复杂度为 O(log n)，它在优先队列、排序和图算法等领域中得到广泛应用。

4.计算一个节点的左子节点、右子节点和父节点的值

左子节点的值：array[index * 2 + 1]
右子节点的值：array[index * 2 + 2]
父节点的值：array[(index - 1) / 2]

5.一般用于查询最大值或者最小值的操作
