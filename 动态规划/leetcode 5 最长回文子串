class Solution:
    def longestPalindrome(self, s: str) -> str:
        n = len(s)
        if not s or n==0:
            return ''

        if n==1:
            return s

        dp = [[False]*n for _ in range(n)]
        
        res = s[0]+''
        for i in range(n):
            dp[i][i]=True

        for j in range(1,n):
            for i in range(j):
                isCharEqual = s[i]==s[j]
                if not isCharEqual:
                    dp[i][j]=False

                else:
                    if j-i==1:
                        dp[i][j]=True
                    else:
                        dp[i][j]=dp[i+1][j-1]
                
                if dp[i][j] and j-i+1>len(res):
                    res = s[i:j+1]
        return res
                    
