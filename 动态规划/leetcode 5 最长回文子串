
class Solution:
    def longestPalindrome(self, s: str) -> str:
        if not s or len(s)==0:
            return ''
        
        if len(s)==1: return s
        
        dp = [[False for _ in range(len(s))] for _ in range(len(s))]

        res = s[0] + ''
        for i in range(len(s)):
            dp[i][i] = True
            
        #状态转移
        for j in range(1, len(s)):
            for i in range(j):
                isCharEqual = s[i]==s[j]
                if j-i==1:
                    dp[i][j]=isCharEqual
                elif not isCharEqual:
                    dp[i][j]=False
                else:
                    dp[i][j]=dp[i+1][j-1]
                if dp[i][j] and j-1+1>len(res):
                    res = s[i:j+1]
        return res
