⭕️dp

class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        if nums is None or len(nums)==0:
            return 0
        dp = [1] * len(nums)
        maxLen = 1
        for i in range(1, len(nums)):
            if nums[i]>nums[i-1]:
                dp[i]=1+dp[i-1]
                maxLen = max(maxLen,dp[i])
                
        return maxLen

⭕️滑动窗口
def findLengthOfLCIS(nums):
    if not nums:
        return 0
    
    n = len(nums)
    left, res = 0, 1
    for right in range(1, n):
        if nums[right] <= nums[right - 1]:
            res = max(res, right - left)
            left = right
    res = max(res, n - left)  # 最后一段连续递增子序列
    return res
