⭕️暴力解法
class Solution:
    def countSubstrings(self, s: str) -> int:
        count=0
        for i in range(len(s)):
            for j in range(i, len(s)):
                seg = s[i:j+1]
                if seg==seg[::-1]:
                    count+=1
        return count

⭕️dp
#判断是否是回文，存在重复
class Solution:
    def countSubstrings(self, s: str) -> int:
        if not s or len(s)==0:
            return 0
        
        dp = [[False for _ in range(len(s))] for _ in range(len(s))]

        res = 0
        for i in range(len(s)):
            dp[i][i] = True
            res+=1
        
        #状态转移
        for j in range(1, len(s)):
            for i in range(j):
                isCharEqual = s[i]==s[j]
                if j-i==1:
                    dp[i][j]=isCharEqual
                elif not isCharEqual:
                    dp[i][j]=False
                else:
                    dp[i][j]=dp[i+1][j-1]
                if dp[i][j]:
                    res+=1
        return res
