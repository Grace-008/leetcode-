from typing import List

class Solution:
    def isInterleave(self, s1: str, s2: str, s3: str) -> bool:
        m, n, t = len(s1), len(s2), len(s3)
        if m + n != t:
            return False

        dp = [[False] * (n + 1) for _ in range(m + 1)]
        dp[0][0] = True
        
        # Initialization for s1
        for i in range(1, m + 1):
            dp[i][0] = s1[i-1] == s3[i-1] and dp[i-1][0]

        # Initialization for s2
        for j in range(1, n + 1):
            dp[0][j] = s2[j-1] == s3[j-1] and dp[0][j-1]

        # Populating the dp table
        for i in range(1, m + 1):
            for j in range(1, n + 1):
                k = i + j
                fromS1 = s1[i-1] == s3[k-1] and dp[i-1][j]
                fromS2 = s2[j-1] == s3[k-1] and dp[i][j-1]
                dp[i][j] = fromS1 or fromS2

        return dp[-1][-1]
