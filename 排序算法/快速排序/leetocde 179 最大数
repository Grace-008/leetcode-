#任意取出两个数，比较两个数所拼接的两种数字谁大谁小
比如
3 30
330>303 ->把3放在30前面

⭕️第一种解法
class Solution:
    def largestNumber(self, nums: List[int]) -> str:
        self.quick_sort(nums, 0, len(nums) - 1)
        result = ''.join(map(str, nums))
        return str(int(result))  # Remove leading zeros, if any

    def quick_sort(self, nums, lo, hi):
        if lo >= hi:
            return
        pivot = nums[hi]
        less = lo
        great = hi
        i = lo
        while i <= great:
            xy = str(nums[i]) + str(pivot)
            yx = str(pivot) + str(nums[i])
            if xy > yx:
                nums[less], nums[i] = nums[i], nums[less]
                less += 1
                i += 1
            elif xy == yx:
                i += 1
            else:
                nums[i], nums[great] = nums[great], nums[i]
                great -= 1
        self.quick_sort(nums, lo, less - 1)
        self.quick_sort(nums, great + 1, hi)

⭕️第二种解法
class Solution:
    def largestNumber(self, nums: List[int]) -> str:
        # Define the custom comparison function
        def compare(a, b):
            return int(str(b) + str(a)) - int(str(a) + str(b))
        
        # Define the quicksort function
        def quicksort(nums, start, end):
            if start >= end:
                return
            pivot = nums[start]
            left, right = start + 1, end
            while left <= right:
                if compare(nums[left], pivot) > 0 and compare(nums[right], pivot) <= 0:
                    nums[left], nums[right] = nums[right], nums[left]
                if compare(nums[left], pivot) <= 0:
                    left += 1
                if compare(nums[right], pivot) > 0:
                    right -= 1
            nums[start], nums[right] = nums[right], nums[start]
            quicksort(nums, start, right - 1)
            quicksort(nums, right + 1, end)
        
        # Convert the input array to a list of strings and quicksort it using the comparison function
        nums_str = [str(num) for num in nums]
        quicksort(nums_str, 0, len(nums_str) - 1)
        
        # Concatenate the sorted strings and return the result
        result = ''.join(nums_str)
        return str(int(result))  # Remove leading zeros, if any
