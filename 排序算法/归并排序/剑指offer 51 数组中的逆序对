⭕️暴力解法

class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        if nums == None or len(nums)<2:
            return 0

        count=0
        for i in range(len(nums)):
            for j in range(i+1,len(nums)):
                if nums[i]>nums[j]:
                    count+=1
        return count

⭕️归并排序
from typing import List

class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        return self.merge_sort(nums)

    def merge_sort(self, nums: List[int]) -> int:
        if len(nums) <= 1:
            return 0

        mid = len(nums) // 2
        left = nums[:mid]
        right = nums[mid:]
        count = 0
        count += self.merge_sort(left)
        count += self.merge_sort(right)

        i = j = 0
        temp = []

        while i < len(left) and j < len(right):
            if left[i] <= right[j]:
                temp.append(left[i])
                i += 1
            else:
                temp.append(right[j])
                j += 1
                count += len(left) - i

        while i < len(left):
            temp.append(left[i])
            i += 1

        while j < len(right):
            temp.append(right[j])
            j += 1

        for k in range(len(temp)):
            nums[k] = temp[k]

        return count


nums = [7, 5, 6, 4]
solution = Solution()
print(solution.reversePairs(nums))  # Output: 5


