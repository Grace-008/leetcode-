⭕️暴力解法

class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        if nums == None or len(nums)<2:
            return 0

        count=0
        for i in range(len(nums)):
            for j in range(i+1,len(nums)):
                if nums[i]>nums[j]:
                    count+=1
        return count

⭕️归并排序
from typing import List

class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        return self.merge_sort(nums)

    def merge_sort(self,nums):
        if len(nums)<=1:
            return 0

        mid = len(nums)//2
        left = nums[:mid]
        right = nums[mid:]

        inversions = 0
        inversions += self.merge_sort(left)
        inversions += self.merge_sort(right)

        i = j = k = 0
        while i<len(left) and j<len(right):
            if left[i]<=right[j]:
                nums[k] = left[i]
                i+=1
            else:
                nums[k] = right[j]
                j+=1
                inversions += len(left)-i
            k+=1
        
        while i<len(left):
            nums[k]=left[i]
            i+=1
            k+=1
        while j<len(right):
            nums[k]=right[j]
            j+=1
            k+=1

        return inversions

nums = [7, 5, 6, 4]
solution = Solution()
print(solution.reversePairs(nums))  # Output: 5


