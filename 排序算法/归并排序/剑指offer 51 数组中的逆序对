⭕️暴力解法

class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        if nums == None or len(nums)<2:
            return 0

        count=0
        for i in range(len(nums)):
            for j in range(i+1,len(nums)):
                if nums[i]>nums[j]:
                    count+=1
        return count

⭕️归并排序
from typing import List

class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        return self.merge_sort(nums)
    
    def merge_sort(self, arr):
        if len(arr) <= 1:
            return 0
        
        mid = len(arr) // 2
        left_half = arr[:mid]
        right_half = arr[mid:]
        
        inversions = 0
        
        inversions += self.merge_sort(left_half)
        inversions += self.merge_sort(right_half)
        
        i = j = k = 0
        
        while i < len(left_half) and j < len(right_half):
            if left_half[i] <= right_half[j]:
                arr[k] = left_half[i]
                i += 1
            else:
                arr[k] = right_half[j]
                j += 1
                inversions += len(left_half) - i
                
            k += 1
        
        while i < len(left_half):
            arr[k] = left_half[i]
            i += 1
            k += 1
        
        while j < len(right_half):
            arr[k] = right_half[j]
            j += 1
            k += 1
        
        return inversions

nums = [7, 5, 6, 4]
solution = Solution()
print(solution.reversePairs(nums))  # Output: 5


