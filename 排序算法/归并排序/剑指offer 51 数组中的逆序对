⭕️暴力解法

class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        if nums == None or len(nums)<2:
            return 0

        count=0
        for i in range(len(nums)):
            for j in range(i+1,len(nums)):
                if nums[i]>nums[j]:
                    count+=1
        return count

⭕️归并排序
class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        return self.merge_sort(nums)

    def merge_sort(self,nums):
        if len(nums)<=1:
            return 0
        mid = len(nums)//2
        left_part = nums[:mid]
        right_part = nums[mid:]
        count = 0
        count += self.merge_sort(left_part)
        count += self.merge_sort(right_part)

        i = j = k = 0
        while i<len(left_part) and j<len(right_part):
            if left_part[i] <= right_part[j]:
                nums[k] = left_part[i]
                i += 1
            else:
                nums[k] = right_part[j]
                j += 1
                count += len(left_part)- i
            k += 1

        while i < len(left_part):
            nums[k] = left_part[i]
            i += 1
            k += 1
        while j< len(right_part):
            nums[k] = right_part[j]
            j += 1
            k += 1
        return count

