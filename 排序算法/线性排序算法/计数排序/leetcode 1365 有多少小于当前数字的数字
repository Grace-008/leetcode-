⭕️暴力解法

class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        result = []
        for i in range(len(nums)):
            count = 0
            for j in range(len(nums)):
                if nums[j] < nums[i]:
                    count += 1
            result.append(count)
        return result


⭕️排序算法

class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        sorted_nums = sorted(nums)
        hash_table = {}
        for i, num in enumerate(sorted_nums):
            if num not in hash_table:
                hash_table[num] = i
        result = []
        for num in nums:
            result.append(hash_table[num])
        return result

⭕️计数排序

class Solution:
    def smallerNumbersThanCurrent(self, nums: List[int]) -> List[int]:
        counts = [0] * 101 # 计数数组，下标0-100表示数字0-100出现的次数
        for num in nums:
            counts[num] += 1
        for i in range(1, 101):
            counts[i] += counts[i-1] # 累加前缀和
        result = []
        for num in nums:
            result.append(counts[num-1] if num > 0 else 0) # 处理0的情况
        return result



