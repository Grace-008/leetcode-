@转换字符串到数字
def string_to_number(string):
    base = 0
    for number in string:
        base = base * 10 + (ord(number) - ord('0'))
    return base


class Solution:
    def myAtoi(self, s: str) -> int:
        n = len(s)
        i = 0
        sign = 1
        
        while i < n and s[i] == ' ':
            i += 1
        
        if i == n:
            return 0
        
        if s[i] == '-':
            sign = -1
            i += 1
        elif s[i] == '+':
            i += 1
        
        base = 0
        while i < n and s[i].isdigit():
            base = base * 10 + ord(s[i]) - ord('0')
            
            if sign == 1 and base > 2**31 - 1:
                return 2**31 - 1
            elif sign == -1 and base > 2**31:
                return -2**31
            
            i += 1
        
        return sign * base

