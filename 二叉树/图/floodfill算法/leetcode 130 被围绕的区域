class Solution:
    def solve(self, board: List[List[str]]) -> None:
        if not board or not board[0]:
            return
        m, n = len(board), len(board[0])
        dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]]
        border = []

        for i in range(m):
            for j in [0, n - 1]:
                if board[i][j] == 'O':
                    border.append((i, j))
        
        for i in range(n):
            for j in [0, m - 1]:
                if board[j][i] == 'O':
                    border.append((j, i))

        def dfs(i, j):
            if i < 0 or j < 0 or i >= m or j >= n or board[i][j] != 'O':
                return
            board[i][j] = 'B'
            for dir in dirs:
                dfs(i + dir[0], j + dir[1])

        for x, y in border:
            dfs(x, y)

        for i in range(m):
            for j in range(n):
                if board[i][j] == 'O':
                    board[i][j] = 'X'
                elif board[i][j] == 'B':
                    board[i][j] = 'O'
