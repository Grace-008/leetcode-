class Solution:
    def colorBorder(self, grid: List[List[int]], row: int, col: int, color: int) -> List[List[int]]:
        rows,cols = len(grid),len(grid[0])
        dirs = [[-1,0],[1,0],[0,-1],[0,1]]
        visited = [[False]*cols for _ in range(rows)]

        oldColor = grid[row][col]
        border = []

        def dfs(i,j):
            if not 0<=i<rows or not 0<=j<cols or grid[i][j]!=oldColor or visited[i][j]:
                return 
            visited[i][j]=True

            if i==0 or i==rows-1 or j==0 or j==cols-1 or any(grid[i+dx][j+dy] != oldColor for dx,dy in dirs if 0<=i+dx<rows and 0<=j+dy<cols):
                border.append((i,j))

            for dx,dy in dirs:
                dfs(i+dx,j+dy)

        dfs(row,col)
        for i,j in border:
            grid[i][j]=color

        return grid
