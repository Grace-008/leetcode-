class Solution:
    def islandPerimeter(self, grid: List[List[int]]) -> int:
        rows, cols = len(grid), len(grid[0])
        dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]]
        perimeter = 0

        def dfs(i, j):
            nonlocal perimeter
            if i < 0 or j < 0 or i == rows or j == cols:
                perimeter += 1
                return
            if grid[i][j] == 0:
                perimeter += 1
                return
            if grid[i][j] == -1:
                return
            
            grid[i][j] = -1  # mark as visited

            for dir in dirs:
                dfs(i + dir[0], j + dir[1])

        for i in range(rows):
            for j in range(cols):
                if grid[i][j] == 1:
                    dfs(i, j)
                    
        return perimeter

