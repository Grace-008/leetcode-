在深度优先搜索（DFS）中，我们需要回溯（backtrack）到之前的节点以继续搜索，而栈（stack）是一种后进先出（Last-In-First-Out，LIFO）的数据结构，非常适合用于回溯。

具体来说，在DFS中，我们先访问一个节点，然后把它的未访问的子节点入栈。当遍历完一个节点的所有子节点后，我们从栈中弹出这个节点，回到上一个节点继续遍历其未访问的子节点。

另一方面，在广度优先搜索（BFS）中，我们需要逐层访问节点，也就是从上到下一层层遍历。队列（queue）是一种先进先出（First-In-First-Out，FIFO）的数据结构，非常适合用于按顺序访问节点。

具体来说，在BFS中，我们从根节点开始遍历，先把根节点入队。然后我们从队列中取出一个节点，访问它的所有子节点，并把它们入队。当我们完成了当前层的遍历后，继续从队列中取出下一个节点，直到队列为空。

因此，DFS使用栈，BFS使用队列，是因为它们的遍历方式不同，需要用不同的数据结构来支持。
