https://blog.csdn.net/fuzhongmin05/article/details/106883153


⭕️迭代实现

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def preorderTraversal(self, root: TreeNode) -> List[int]:
        if not root:
            return []
        
        stack, output = [root], []
        
        while stack:
            node = stack.pop()
            output.append(node.val)
            
            if node.right:
                stack.append(node.right)
            if node.left:
                stack.append(node.left)
                
        return output

⭕️递归实现
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def preorderTraversal(self, root):
        res = []
        self.traverse(root, res)
        return res
        
    def traverse(self, node, res):
        if not node:
            return
        res.append(node.val)
        self.traverse(node.left, res)
        self.traverse(node.right, res)
