⭕️穷举
⭕️剪枝

class Solution:
    def solveNQueens(self, n: int) -> List[List[str]]:
        def is_valid(board, row, col):
            # 检查列是否有皇后冲突
            for i in range(n):
                if board[i][col] == 'Q':
                    return False
            # 检查右上方是否有皇后冲突
            for i, j in zip(range(row - 1, -1, -1), range(col + 1, n)):
                if board[i][j] == 'Q':
                    return False
            # 检查左上方是否有皇后冲突
            for i, j in zip(range(row - 1, -1, -1), range(col - 1, -1, -1)):
                if board[i][j] == 'Q':
                    return False
            return True
        
        def dfs(board, row):
            if row == n:
                res.append([''.join(row) for row in board])
                return 
            for col in range(n):
                if not is_valid(board, row, col):
                    continue
                board[row][col] = 'Q'
                dfs(board, row + 1)
                board[row][col] = '.'
        
        res = []
        board = [['.' for _ in range(n)] for _ in range(n)]
        dfs(board, 0)
        return res

