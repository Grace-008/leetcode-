class Solution:
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:
        res = []
        self.dfs(root, 0, targetSum, [], res)
        return res

    def dfs(self, node, currentSum, targetSum, path, res):
        if not node:
            return 
        currentSum += node.val
        path.append(node.val)
        if currentSum == targetSum and not node.left and not node.right:
            res.append(list(path))
        else:
            self.dfs(node.left, currentSum, targetSum, path, res)
            self.dfs(node.right, currentSum, targetSum, path, res)
        path.pop()
