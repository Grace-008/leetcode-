⭕️剪枝策略

1.开括号数量不能超过n

2.闭括号数量不能超过开括号数量

class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        res = []
        self.dfs(n, '', res, 0, 0)
        return res

    def dfs(self, n, path, res, open, close):
        if open > n or close > open:
            return
        
        if len(path) == 2 * n:
            res.append(path)
            return

        self.dfs(n, path + '(', res, open + 1, close)
        self.dfs(n, path + ')', res, open, close + 1)


⭕️写法二：
class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        def backtrack(s='', left=0, right=0):
            if len(s) == 2 * n:
                res.append(s)
                return
            if left < n:
                backtrack(s + '(', left+1, right)
            if right < left:
                backtrack(s + ')', left, right+1)
                
        res = []
        backtrack()
        return res
