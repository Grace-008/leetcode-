⭕️前序遍历

class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def findBottomLeftValue(self, root: Optional[TreeNode]) -> int:
        maxLen = float('-inf')
        maxLeftValue = float('-inf')

        def dfs(root, leftLen):
            nonlocal maxLen, maxLeftValue

            if not root:
                return

            if not root.left and not root.right:
                if leftLen > maxLen:
                    maxLen = leftLen
                    maxLeftValue = root.val
                return

            if root.left:
                dfs(root.left, leftLen + 1)

            if root.right:
                dfs(root.right, leftLen + 1)

        dfs(root, 0)
        return maxLeftValue
