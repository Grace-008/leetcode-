'''
暴力解法

'''

class Solution:   
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        for char in ransomNote:
            if char in magazine:
                # Remove the character from the magazine string
                magazine = magazine.replace(char, '', 1)
            else:
                return False     
        return True


'''
哈希表
'''

class Solution:   
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        from collections import defaultdict
        hashmap = defaultdict(int)
        for char in magazine:
            hashmap[char]+=1
        for char in ransomNote:
            if hashmap[char] is None or hashmap[char]==0:
                return False
            else:
                hashmap[char]-=1
        return True
                
                
                
 '''
 Counter
 '''
 
 class Solution:
    def canConstruct(self, ransomNote: str, magazine: str) -> bool:
        c1 = collections.Counter(ransomNote)
        c2 = collections.Counter(magazine)
        x = c1 - c2
        #x只保留值大于0的符号，当c1里面的符号个数小于c2时，不会被保留
        #所以x只保留下了，magazine不能表达的
        if(len(x)==0):
            return True
        else:
            return False
   
