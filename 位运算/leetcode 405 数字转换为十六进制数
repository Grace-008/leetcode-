十六进制	二进制
0	0000
1	0001
2	0010
3	0011
4	0100
5	0101
6	0110
7	0111
8	1000
9	1001
A	1010
B	1011
C	1100
D	1101
E	1110
F	1111

26     00000000000000000000000000011010 每一次处理最后4位，与1111取&
&      00000000000000000000000000001111
       00000000000000000000000000001010

26>>>4 00000000000000000000000000000001
&      00000000000000000000000000001111
       00000000000000000000000000000001



class Solution:
    def toHex(self, num: int) -> str:
        if num == 0: return '0'
        hexChars = '0123456789abcdef'
        res = ''
        for _ in range(8): # 32 bits divided by 4 bits per hex digit
            index = num & 15 #1111=15
            res = hexChars[index] + res
            num >>= 4
            if num == 0:
                break
        return res

